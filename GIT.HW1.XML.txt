 1. Создать внешний репозиторий c названием XML.
 2. Клонировать репозиторий XML на локальный компьютер.
  git clone https://github.com/Karinkaya1/XML.git
 3. Внутри локального XML создать файл “new.xml”.
 4. Добавить файл под гит.
 git add new.xml
 5. Закоммитить файл.
 git commit -m "add new.xml"
 6. Отправить файл на внешний GitHub репозиторий.
 git push -u origin main
 7. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 <Karina>
<FirstName>Karina</FirstName>
<LastName>Yakubovich</LastName>
<Age>24</Age>
<NumberOfPets>2</NumberOfPets>
<DesiredSalaryInTheFuture> 1500$ </DesiredSalaryInTheFuture>
</Karina>
 8. Отправить изменения на внешний репозиторий.
 git commit -am "firstname lastname new.xml"
 git push -u origin main
 9. Создать файл preferences.xml
 10. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 <Karina>
<favorite movie>Konstantine</favorite movie>
<favourite TV show>Schamless</favourite TV show>
<favourite eat>suchi</favourite eat>
<favourite season>spring</favourite season>
<country to visit>poland</country to visit>
</Karina>
 11. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 <Karina>
<skills of course of Vadim Ksendzov>"1. Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.
    2. Что такое клиент-серверная архитектура.
    3. HTTP Методы запросов на сервер.
    4. Коды ответов HTTP сервера.
    5. Структуры HTTP запросов и ответов.
    6. Что такое JSON, XML. Их структура.
    7. Тестирование API через Postman (JS, автотесты API).
    8. Снятие и чтение логов c внешнего сервера.
    9. Снифинг http web трафика через Charles и Fiddler.
    10. Dev Tools веб браузеров (Google Chrome, FireFox).
    11. VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)
    12. Мобильное тестирование.
    13. Особенность iOS, Android, гайдлайны.
    14. Сборка iOS приложений на XCode. (У кого нет Mac компьютера, просто посмотрят)
    15. Сборка Android приложений на Android Studio.
    16. ADB (управление андройд девайсами).
    17. Настройка прокси и vpn на iOS и Android.
    18. Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android.
    19. Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)
    20. Основы bash скриптинг, автоматизация рутинных задач на сервере.
    21. Доступ к удалённым серверам.
    22. Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).
    23. База данных Postgres (установка, настройка и использование).
    24. Нереляционная база данных Redis (установка, настройка и использование).
    25. Нагрузочное тестирование в Jmeter.
    26. Методология разработки Scrum.
    27. Python. (Изучение основ. Создание клиент серверного приложения)"</skills of course of Vadim Ksendzov>
    </Karina>
 12. Сделать коммит в одну строку.
 git add preferences.xml skills.xml
 git commit -m "add preferences.xml skills.xml"
 13. Отправить сразу 2 файла на внешний репозиторий.
 git push -u origin main
 14. На веб интерфейсе создать файл bug_report.xml.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий XML
 git pull